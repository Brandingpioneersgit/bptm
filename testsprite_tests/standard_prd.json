{
  "meta": {
    "project": "BP Agency Dashboard",
    "date": "2025-09-08",
    "prepared_by": "Generated by TestSprite"
  },
  "product_overview": "BP Agency Dashboard is a comprehensive management system designed for digital marketing agencies, offering centralized role-based dashboards to streamline employee and client management, performance tracking, client servicing, and reporting.",
  "core_goals": [
    "Establish a single source of truth for all employee and client data with role-based access.",
    "Enhance operational clarity by tracking tasks, clients, and outcomes transparently.",
    "Implement monthly performance tracking and quarterly appraisals based on objective KPIs and proofs.",
    "Provide financial oversight including payment tracking, compliance verification, and invoice management.",
    "Maintain a rigorous sales pipeline process with stages, analytics, and lead tracking.",
    "Support organizational culture and learning mandates with automated compliance and appraisal adjustments."
  ],
  "key_features": [
    "Unified Authentication System with role-based access control and session management.",
    "Role-specific DASHBOARDS for Super Admin, Admin, Managers, Employees, Freelancers, and Interns.",
    "Monthly Tactical Updates and Quarterly Strategic Reviews for performance management with proof URL enforcement.",
    "Comprehensive Client Management covering onboarding, directory, and ongoing servicing dashboards.",
    "Employee lifecycle management including signup, onboarding, and performance reviews.",
    "SEO Module for SEO data entry, reporting, and appraisal system.",
    "Reporting System with monthly and quarterly reports, growth analytics, and department-specific dashboards.",
    "Sales Pipeline management with customizable stages and conversion analytics.",
    "Accounts & Compliance management for payment tracking, GST filing, and bookkeeping proof enforcement.",
    "Notification system for reminders, failure alerts, and digest emails.",
    "Audit logs capturing data changes and views to ensure accountability.",
    "Gamification Arcade system with point earning and redemption controls."
  ],
  "user_flow_summary": [
    "User logs in via secure authentication with phone/email and role-based authorization.",
    "User accesses personalized dashboard based on assigned role with relevant KPIs and tasks.",
    "Employees submit Monthly Tactical Updates including KPIs, proofs, and discipline data.",
    "Manager reviews monthly tactical updates, validates proofs, and accesses client NPS and project scope updates.",
    "Admin manages onboarding workflows for employees and clients, oversees master data and permissions.",
    "Sales team updates leads in the pipeline and tracks conversion analytics.",
    "Accountants track payments, compliance, and update accounts status with proof attachments.",
    "System generates quarterly strategic reports aggregating monthly data with actionable insights."
  ],
  "validation_criteria": [
    "All KPI, payment, and compliance claims require proof URLs before submission.",
    "Employee monthly tactical reports cannot be finalized without mandatory fields completed.",
    "Learning compliance rules automatically impose appraisal delays for non-compliance (<6 learning hours).",
    "Sales dashboard accurately displays lead counts, pipeline stages, and conversion metrics.",
    "Accounts dashboard correctly distinguishes retainer vs one-time payment flows and shows payment statuses.",
    "Exports of reports to PDF and CSV formats complete within 10 seconds with accurate data.",
    "Authentication sessions persist with secure token management and prevent unauthorized access.",
    "Role-based access control strictly enforced on UI and API endpoints with audit logs for changes and views."
  ],
  "code_summary": {
    "tech_stack": [
      "JavaScript",
      "React 18.2.0",
      "Vite 5.0.0",
      "Node.js",
      "Express 4.18.2",
      "Supabase",
      "PostgreSQL",
      "Tailwind CSS 3.4.0",
      "React Router DOM 7.8.2",
      "Headless UI",
      "Heroicons",
      "Lucide React",
      "Recharts",
      "React Big Calendar",
      "Moment.js",
      "Date-fns",
      "CORS",
      "Dotenv",
      "Vitest",
      "PostCSS",
      "Autoprefixer"
    ],
    "features": [
      {
        "name": "Authentication System",
        "description": "Unified authentication with role-based access control, session management, and user login/logout functionality",
        "files": [
          "src/features/auth/UnifiedAuthContext.jsx",
          "src/features/auth/LoginForm.jsx",
          "src/features/auth/AuthService.js",
          "src/api/authApi.js",
          "api-server.js"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "paths": {
            "/api/auth/login": {
              "post": {
                "summary": "User login",
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "email": {
                            "type": "string"
                          },
                          "password": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "Login successful"
                  },
                  "401": {
                    "description": "Invalid credentials"
                  }
                }
              }
            },
            "/api/auth/logout": {
              "post": {
                "summary": "User logout",
                "responses": {
                  "200": {
                    "description": "Logout successful"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Dashboard Management",
        "description": "Role-based dashboards for different user types including Super Admin, Manager, Employee, Intern, and Freelancer dashboards",
        "files": [
          "src/components/ManagerDashboard.jsx",
          "src/components/EmployeePersonalDashboard.jsx",
          "src/components/InternDashboard.jsx",
          "src/components/AgencyDashboard.jsx",
          "src/components/dashboards/DesignDashboard.jsx",
          "src/components/SEOModule.jsx"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "paths": {
            "/api/super-admin/dashboard": {
              "get": {
                "summary": "Get Super Admin dashboard data",
                "responses": {
                  "200": {
                    "description": "Dashboard data retrieved"
                  }
                }
              }
            },
            "/api/admin/dashboard": {
              "get": {
                "summary": "Get Admin dashboard data",
                "responses": {
                  "200": {
                    "description": "Dashboard data retrieved"
                  }
                }
              }
            },
            "/api/manager/dashboard": {
              "get": {
                "summary": "Get Manager dashboard data",
                "responses": {
                  "200": {
                    "description": "Dashboard data retrieved"
                  }
                }
              }
            },
            "/api/employee/dashboard": {
              "get": {
                "summary": "Get Employee dashboard data",
                "responses": {
                  "200": {
                    "description": "Dashboard data retrieved"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Client Management",
        "description": "Complete client lifecycle management including client creation, onboarding, project tracking, and client directory",
        "files": [
          "src/features/clients/components/ClientManagementView.jsx",
          "src/features/clients/components/ClientAdditionForm.jsx",
          "src/features/clients/components/ClientDashboardView.jsx",
          "src/components/ClientDirectory.jsx",
          "src/components/ClientOnboardingForm.jsx",
          "src/components/ClientProjects.jsx"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "paths": {
            "/api/clients": {
              "get": {
                "summary": "Get all clients",
                "responses": {
                  "200": {
                    "description": "List of clients retrieved"
                  }
                }
              },
              "post": {
                "summary": "Create new client",
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "services": {
                            "type": "array"
                          }
                        }
                      }
                    }
                  }
                },
                "responses": {
                  "201": {
                    "description": "Client created successfully"
                  }
                }
              }
            },
            "/api/client/onboarding": {
              "post": {
                "summary": "Client onboarding process",
                "responses": {
                  "200": {
                    "description": "Onboarding completed"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Employee Management",
        "description": "Employee lifecycle management including signup, onboarding, performance tracking, and employee directory",
        "files": [
          "src/features/employees/components/EmployeeSignupNavigation.jsx",
          "src/features/employees/components/ManagerIncentiveReporting.jsx",
          "src/components/EmployeeForm.jsx",
          "src/components/EmployeeForm/NewEmployeeForm.jsx"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "paths": {
            "/api/employees": {
              "get": {
                "summary": "Get all employees",
                "responses": {
                  "200": {
                    "description": "List of employees retrieved"
                  }
                }
              },
              "post": {
                "summary": "Create new employee",
                "responses": {
                  "201": {
                    "description": "Employee created successfully"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Reporting System",
        "description": "Comprehensive reporting system with monthly tactical reports, quarterly strategic reports, and performance analytics",
        "files": [
          "src/components/NewReportDashboard.jsx",
          "src/utils/reportGenerator.js",
          "api-server.js"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "paths": {
            "/api/reports/monthly-tactical": {
              "get": {
                "summary": "Get monthly tactical reports",
                "responses": {
                  "200": {
                    "description": "Monthly reports retrieved"
                  }
                }
              }
            },
            "/api/reports/quarterly-strategic": {
              "get": {
                "summary": "Get quarterly strategic reports",
                "responses": {
                  "200": {
                    "description": "Quarterly reports retrieved"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Workspace Management",
        "description": "Project workspace system for team collaboration and project tracking",
        "files": [
          "src/components/ProjectWorkspaceSystem.jsx",
          "src/shared/services/workspaceService.js"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "paths": {
            "/api/workspaces": {
              "get": {
                "summary": "Get all workspaces",
                "responses": {
                  "200": {
                    "description": "List of workspaces retrieved"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Payment Management",
        "description": "Payment tracking and financial management system",
        "files": [
          "api-server.js"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "paths": {
            "/api/accounts/payments": {
              "get": {
                "summary": "Get payment accounts",
                "responses": {
                  "200": {
                    "description": "Payment accounts retrieved"
                  }
                }
              }
            },
            "/api/payments/{payment_id}": {
              "get": {
                "summary": "Get specific payment",
                "parameters": [
                  {
                    "name": "payment_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                      "type": "string"
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "Payment details retrieved"
                  }
                }
              },
              "put": {
                "summary": "Update payment",
                "parameters": [
                  {
                    "name": "payment_id",
                    "in": "path",
                    "required": true,
                    "schema": {
                      "type": "string"
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "Payment updated successfully"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Sales Management",
        "description": "Sales lead management and tracking system",
        "files": [
          "api-server.js"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "paths": {
            "/api/sales/leads": {
              "get": {
                "summary": "Get sales leads",
                "responses": {
                  "200": {
                    "description": "Sales leads retrieved"
                  }
                }
              },
              "post": {
                "summary": "Create sales lead",
                "responses": {
                  "201": {
                    "description": "Sales lead created"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Notification System",
        "description": "Real-time notification system with read/unread status tracking",
        "files": [
          "src/components/notifications/NotificationCenter.jsx",
          "src/components/NotificationSystem.jsx",
          "api-server.js"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "paths": {
            "/api/notifications": {
              "get": {
                "summary": "Get notifications",
                "responses": {
                  "200": {
                    "description": "Notifications retrieved"
                  }
                }
              }
            },
            "/api/notifications/{id}/read": {
              "put": {
                "summary": "Mark notification as read",
                "parameters": [
                  {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                      "type": "string"
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "Notification marked as read"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "System Administration",
        "description": "System health monitoring, user management, and audit logging",
        "files": [
          "api-server.js",
          "src/components/MasterToolsPage.jsx"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "paths": {
            "/health": {
              "get": {
                "summary": "Health check endpoint",
                "responses": {
                  "200": {
                    "description": "System is healthy"
                  }
                }
              }
            },
            "/api/check-users": {
              "get": {
                "summary": "Check existing users",
                "responses": {
                  "200": {
                    "description": "User information retrieved"
                  }
                }
              }
            },
            "/api/seed-users": {
              "post": {
                "summary": "Seed test users (development only)",
                "responses": {
                  "200": {
                    "description": "Test users created"
                  }
                }
              }
            },
            "/api/audit/logs": {
              "get": {
                "summary": "Get audit logs",
                "responses": {
                  "200": {
                    "description": "Audit logs retrieved"
                  }
                }
              }
            },
            "/api/live-data": {
              "get": {
                "summary": "Get live system data",
                "responses": {
                  "200": {
                    "description": "Live data retrieved"
                  }
                }
              }
            }
          }
        }
      }
    ]
  }
}
